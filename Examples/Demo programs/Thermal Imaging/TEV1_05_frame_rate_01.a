-----------------------------------------------------------------------
-- An example of Actor Prolog program.                               --
-- (c) 2018 IRE RAS Alexei A. Morozov                                --
-----------------------------------------------------------------------
import .. from "morozov/Java2D";
import .. from "morozov/TEV1";
import .. from "morozov/ColorMap";
-----------------------------------------------------------------------
project: (('Viewer'))
-----------------------------------------------------------------------
class 'Viewer' (specialized 'Dialog'):
--
internal:
--
	buffer		= ('CameraControl',
				viewer=self,
				main_window);
	main_window	= ('Canvas2D',
				background_color='SystemControl');
	con		= ('Console');
	color_maps	= ('ColorMap');
--
constant:
--
	is_top_level_window	= 'yes';
	exit_on_close		= 'yes';
	--
	dlg_ctrl_apply_anomalous_voltage_detector	= 1110;
	dlg_ctrl_anomalous_voltage_threshold		= 1120;
	dlg_ctrl_apply_anomalous_temperature_detector	= 1130;
	dlg_ctrl_anomalous_temperature_threshold	= 1140;
	--
	dlg_ctrl_number_of_dead_pixels			= 1150;
	dlg_ctrl_anomalous_voltage_pixels		= 1160;
	dlg_ctrl_anomalous_temperature_pixels		= 1170;
	dlg_ctrl_eliminate_anomalous_pixels		= 1180;
	--
	dlg_ctrl_color_map				= 1210;
	dlg_ctrl_zoom_image				= 1220;
	dlg_ctrl_zooming_coefficient			= 1230;
	dlg_ctrl_do_not_suspend_USB			= 1240;
	dlg_ctrl_output_debug_information		= 1250;
	--
	dlg_ctrl_scrollbar_USB_read_time_out		= 2010;
	dlg_ctrl_editor_USB_read_time_out		= 2020;
	dlg_ctrl_scrollbar_USB_write_time_out		= 3010;
	dlg_ctrl_editor_USB_write_time_out		= 3020;
--
[
goal:-!,
	initialize_controls,
	update_displaying_mode,
	show.
--
action("Open"):-!,
	select_and_open_device.
action("Start"):-!,
	buffer ? start.
action("Pause"):-!,
	buffer ? pause.
action("Stop"):-!,
	buffer ? stop.
action("Close"):-!,
	buffer ? disconnect.
action("Calibrate"):-!,
	buffer ? calibrate.
action("AnnulCalibration"):-!,
	buffer ? annul_calibration,
	put(dlg_ctrl_number_of_dead_pixels,0),
	put(dlg_ctrl_anomalous_voltage_pixels,0),
	put(dlg_ctrl_anomalous_temperature_pixels,0).
action("SaveSensorAttributes"):-
	FileName== con?input_file_name(
		"Please select sensor attributes file",
		"*.bin",
		[
		"*.bin","Sensor Attributes Files",
		"*.*","All Files"
		]),!,
	buffer ? save_sensor_attributes(FileName).
action("LoadSensorAttributes"):-
	FileName== con?input_file_name(
		"Please select sensor attributes file",
		"*.bin",
		[
		"*.bin","Sensor Attributes Files",
		"*.*","All Files"
		]),!,
	buffer ? load_sensor_attributes(FileName).
--
select_and_open_device:-
	List== buffer?get_device_list(),
	initialize_data_acquisition(List).
--
initialize_data_acquisition([]):-!,
	con ? error(
		"Error",
		"Sorry, the TE V1 device is not found!").
initialize_data_acquisition(List):-
	con ? select_item(
		"Device Selection",
		"Select device, please",
		?cast("S_List",List),
		1,
		SelectedIdentifier,
		_),!,
	initialize_selected_device(SelectedIdentifier).
initialize_data_acquisition(_).
--
initialize_selected_device(Identifier):-
	set_title(con?format("Thermal Image Viewer [%s]",Identifier)),
	buffer ? connect(Identifier),!.
initialize_selected_device(Identifier):-
	con ? error(
		"Error",
		con?format(
			"Sorry, I cannot open the\n%s\ndevice!",
			Identifier)).
--
modified_control(dlg_ctrl_apply_anomalous_voltage_detector):-
	Mode== ?val("YesNo",
		?get(dlg_ctrl_apply_anomalous_voltage_detector)),!,
	buffer ? set_apply_anomalous_voltage_pixel_detector(Mode).
modified_control(dlg_ctrl_anomalous_voltage_threshold):-
	Threshold== ?val("REAL",
		?get(dlg_ctrl_anomalous_voltage_threshold)),!,
	buffer ? set_anomalous_voltage_threshold(Threshold).
modified_control(dlg_ctrl_apply_anomalous_temperature_detector):-
	Mode== ?val("YesNo",
		?get(dlg_ctrl_apply_anomalous_temperature_detector)),!,
	buffer ? set_apply_anomalous_temperature_pixel_detector(Mode).
modified_control(dlg_ctrl_anomalous_temperature_threshold):-
	Threshold== ?val("REAL",
		?get(dlg_ctrl_anomalous_temperature_threshold)),!,
	buffer ? set_anomalous_temperature_threshold(Threshold).
modified_control(dlg_ctrl_eliminate_anomalous_pixels):-
	Mode== ?val("YesNo",
		?get(dlg_ctrl_eliminate_anomalous_pixels)),!,
	buffer ? set_eliminate_anomalous_pixels(Mode),
	update_displaying_mode,
	buffer ? frame_obtained.
modified_control(dlg_ctrl_color_map):-!,
	update_displaying_mode,
	buffer ? frame_obtained.
modified_control(dlg_ctrl_zoom_image):-!,
	update_displaying_mode,
	buffer ? frame_obtained.
modified_control(dlg_ctrl_zooming_coefficient):-!,
	update_displaying_mode,
	buffer ? frame_obtained.
modified_control(dlg_ctrl_do_not_suspend_USB):-
	Mode== ?val("YesNo",?get(dlg_ctrl_do_not_suspend_USB)),!,
	buffer ? set_do_not_suspend_USB_data_transfer(Mode).
modified_control(dlg_ctrl_output_debug_information):-
	VerbosityLevel== ?convert_to_integer(
		?get(dlg_ctrl_output_debug_information)),!,
	buffer ? set_output_debug_information(VerbosityLevel).
modified_control(dlg_ctrl_scrollbar_USB_read_time_out):-
	Milliseconds== ?val("INTEGER",
		?get(dlg_ctrl_scrollbar_USB_read_time_out)),!,
	put(dlg_ctrl_editor_USB_read_time_out,Milliseconds),
	buffer ? set_read_time_out(Milliseconds),
	buffer ? reset_frame_rate.
modified_control(dlg_ctrl_scrollbar_USB_write_time_out):-
	Milliseconds== ?val("INTEGER",
		?get(dlg_ctrl_scrollbar_USB_write_time_out)),!,
	put(dlg_ctrl_editor_USB_write_time_out,Milliseconds),
	buffer ? set_write_time_out(Milliseconds),
	buffer ? reset_frame_rate.
--
complete_editing(dlg_ctrl_editor_USB_read_time_out):-
	Milliseconds== ?val("INTEGER",
		?get(dlg_ctrl_editor_USB_read_time_out)),!,
	put(dlg_ctrl_scrollbar_USB_read_time_out,Milliseconds),
	buffer ? set_read_time_out(Milliseconds),
	buffer ? reset_frame_rate.
complete_editing(dlg_ctrl_editor_USB_write_time_out):-
	Milliseconds== ?val("INTEGER",
		?get(dlg_ctrl_editor_USB_write_time_out)),!,
	put(dlg_ctrl_scrollbar_USB_write_time_out,Milliseconds),
	buffer ? set_write_time_out(Milliseconds),
	buffer ? reset_frame_rate.
--
update_displaying_mode:-
	TextCM== ?val("STRING",?get(dlg_ctrl_color_map)),
	ZoomImage== ?val("YesNo",?get(dlg_ctrl_zoom_image)),
	ZoomingCoefficient== ?val("Numerical",
		?get(dlg_ctrl_zooming_coefficient)),!,
	ColorMap== color_maps?string_to_color_map_name(TextCM),
	buffer ? set_main_color_map(ColorMap),
	buffer ? set_zoom_image(ZoomImage),
	buffer ? set_zooming_coefficient(ZoomingCoefficient).
update_displaying_mode.
--
report_anomalous_pixels(DP,AVP,ATP):-
	put(dlg_ctrl_number_of_dead_pixels,DP),
	put(dlg_ctrl_anomalous_voltage_pixels,AVP),
	put(dlg_ctrl_anomalous_temperature_pixels,ATP).
--
initialize_controls:-
	ReadTimeOut== buffer?get_read_time_out(),
	WriteTimeOut== buffer?get_write_time_out(),
	put(dlg_ctrl_scrollbar_USB_read_time_out,WriteTimeOut),
	put(dlg_ctrl_editor_USB_read_time_out,ReadTimeOut),
	put(dlg_ctrl_scrollbar_USB_write_time_out,WriteTimeOut),
	put(dlg_ctrl_editor_USB_write_time_out,WriteTimeOut).
]
-----------------------------------------------------------------------
class 'CameraControl' (specialized 'TEV1'):
--
constant:
--
	operating_mode			= 'LISTENING';
--
internal:
--
	viewer;
	main_window;
--
	image				= ('BufferedImage');
	con				= ('Console');
	text				= ('Text');
	timer				= ('Timer');
--
[
frame_obtained:-
	commit,!,
	get_recent_image(image),
	get_image_size_in_pixels(IW,IH),
	get_recent_frame_number(FrameNumber),
	get_recent_frame_time(FrameTime),
	get_recent_frame_rate(FR1,FR2,FR3),
	main_window ? suspend_redrawing,
	resize_main_window(IW,IH),
	main_window ? clear,
	main_window ? draw_image(image,0,0,1,1),
	report_time(FrameNumber,FrameTime,FR1,FR2,FR3),
	main_window ? draw_now.
--
resize_main_window(IW,IH):-
	IW > 0,
	IH > 0,!,
	main_window ? refine_width(IW/IH).
resize_main_window(_,_).
--
complete_calibration():-!,
	DP== ?get_number_of_dead_pixels(),
	AVP== ?get_number_of_anomalous_voltage_pixels(),
	ATP== ?get_number_of_anomalous_temperature_pixels(),
	viewer ? report_anomalous_pixels(DP,AVP,ATP),
	con ? note("Calibration is complete.").
--
data_transfer_error(ErrorName):-!,
	con ? error("Data Transfer Error",ErrorName).
--
report_time(_,_,_,_,_):-
	main_window ? set_brush('Green'),
	main_window ? set_font({size:18}),
	fail.
report_time(FrameNumber,FrameTime,FR1,FR2,FR3):-
	FrameNumber >= 0,
	Time== timer?convert_to_time(FrameTime),
	Time == time(Hours,Minutes,Seconds,Milliseconds),!,
	main_window ? set_text_alignment('LEFT','TOP'),
	main_window ? draw_text(
		0.02, 0.02,
		text?format(
			"Frame Time: %02d:%02d:%02d.%03d",
			Hours,Minutes,Seconds,Milliseconds)),
	main_window ? draw_text(
		0.02, 0.02 + 0.05,
		text?format(
			"Frame Number: %d",
			FrameNumber)),
	main_window ? draw_text(
		0.02, 0.02 + 0.10,
		text?format(
			"Frame Rate of Committed Frames: %2.1f",FR1)),
	main_window ? draw_text(
		0.02, 0.02 + 0.15,
		text?format(
			"Frame Rate of Valid Frames: %2.1f",FR2)),
	main_window ? draw_text(
		0.02, 0.02 + 0.20,
		text?format(
			"Frame Rate of Corrupted Frames: %2.1f",FR3)).
report_time(_,_,_,_,_).
]
-----------------------------------------------------------------------
