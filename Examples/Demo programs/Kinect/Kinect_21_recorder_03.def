-----------------------------------------------------------------------
-- An example of Actor Prolog program.                               --
-- (c) 2017 IRE RAS Alexei A. Morozov                                --
-----------------------------------------------------------------------
--
import .. from "morozov/Java2D";
import .. from "morozov/Kinect";
import .. from "morozov/ColorMap";
--
-----------------------------------------------------------------------
--
DOMAINS:
--
Side			= 'Right'; 'Left'.
YesNoUnknown		= 'yes'; 'no'; 'unknown'.
DialogFieldNames	= DialogFieldName*.
--
-----------------------------------------------------------------------
interface 'VideoRecorder' (specialized 'Dialog'):
--
internal:
--
	buffer			: 'ControllableBuffer';
	recorder		: 'DataRecorder';
	kinect			: 'Kinect';
	main_window		: 'Canvas2D';
	legend_window		: 'Canvas2D';
	kinect_error_handler	: 'KinectErrorHandler';
	data_are_to_be_saved	: 'Switch';
	image_size_ratio	: 'FrameSizeRatio';
	file_operations		: 'File';
	text_operations		: 'Text';
	color_maps		: 'ColorMap';
	con			: 'Console';
--
constant:
--
	temporary_file_name	: FileName;
--
constant:
--
	dlg_ctrl_edittext_dx				: DialogFieldName;
	dlg_ctrl_edittext_dy				: DialogFieldName;
	dlg_ctrl_edittext_description			: DialogFieldName;
	dlg_ctrl_edittext_copyright			: DialogFieldName;
	dlg_ctrl_edittext_registration_date		: DialogFieldName;
	dlg_ctrl_edittext_registration_time		: DialogFieldName;
	--
	dlg_ctrl_checkbox_depth_maps			: DialogFieldName;
	dlg_ctrl_checkbox_colored_depth_maps		: DialogFieldName;
	dlg_ctrl_checkbox_infrared			: DialogFieldName;
	dlg_ctrl_checkbox_LE_infrared			: DialogFieldName;
	dlg_ctrl_checkbox_mapped_color			: DialogFieldName;
	dlg_ctrl_checkbox_point_clouds			: DialogFieldName;
	dlg_ctrl_checkbox_color				: DialogFieldName;
	--
	dlg_ctrl_checkbox_total_rectangles		: DialogFieldName;
	dlg_ctrl_checkbox_skeleton_rectangles		: DialogFieldName;
	dlg_ctrl_checkbox_total_parallelepipeds		: DialogFieldName;
	dlg_ctrl_checkbox_skeleton_parallelepipeds	: DialogFieldName;
	--
	dlg_ctrl_listbutton_frame_type			: DialogFieldName;
	dlg_ctrl_listbutton_people_index_mode		: DialogFieldName;
	dlg_ctrl_listbutton_circumscription_mode	: DialogFieldName;
	dlg_ctrl_listbutton_skeletons_mode		: DialogFieldName;
	--
	dlg_ctrl_listbutton_color_map			: DialogFieldName;
	dlg_ctrl_listbutton_people_colors		: DialogFieldName;
	--
	dlg_ctrl_scrollbar_frame_number_range		: DialogFieldName;
	dlg_ctrl_scrollbar_frame_number_value		: DialogFieldName;
--
[
PREDICATES:
--
imperative:
--
load_temporary_file_if_possible;
choose_file(STRING)					- (i);
update_dialog_title(STRING)				- (i);
start_reading;
--
determ:
--
check_whether_data_are_to_be_saved;
--
imperative:
--
park_scroll_control;
continue_recording_if_necessary;
--
redraw_recent_frame;
scroll_video;
update_acquisition_mode;
--
assemble_data_acquisition_mode(
	DialogFieldNames,
	KinectDataAcquisitionMode,
	KinectDataAcquisitionMode,
	KinectDataAcquisitionMode)		- (i,i,i,o);
--
update_displaying_mode;
--
collect_circumscription_modes(
	DialogFieldNames,
	KinectCircumscriptionModes,
	KinectCircumscriptionModes,
	KinectCircumscriptionModes)		- (i,i,i,o);
--
update_color_map;
--
form_color_map(
	ColorMapName,
	KinectFrameType,
	KinectPeopleIndexMode,
	ColorMap)				- (i,i,i,o);
--
determ:
--
people_are_to_be_extracted(KinectPeopleIndexMode)		- (i);
--
imperative:
--
select_background_color(KinectFrameType,Color)			- (i,o);
--
update_people_coloring;
--
determ:
--
string_to_frame_type(STRING) = KinectFrameType			- (i);
string_to_people_index(STRING) = KinectPeopleIndexMode		- (i);
string_to_circumscription(STRING) = KinectCircumscriptionMode	- (i);
string_to_skeletons(STRING) = KinectSkeletonsMode		- (i);
string_to_people_colors(STRING)	= ColorMap			- (i);
--
imperative:
--
set_read_buffer_size(INTEGER)				- (i);
refine_width(REAL)					- (i);
retrieve_video_attributes;
--
update_recorder_mode;
update_data_acquisition_mode(KinectDataAcquisitionMode)		- (i);
update_frame_type_flag(KinectFrameType)				- (i);
update_circumscription_modes(KinectCircumscriptionModes)	- (i);
update_circumscription_mode(KinectCircumscriptionModes)		- (i);
--
switch_buttons;
switch_button_Connect;
switch_button_Choose;
switch_button_Play;
switch_button_Pause;
switch_button_Record;
switch_button_Stop;
switch_button_Save;
switch_button_Export;
switch_button_Calibrate;
switch_button_Reset;
switch_text_area_Correction;
switch_text_area_Description;
switch_auxiliary_controls;
--
complete_data_transfer;
]
-----------------------------------------------------------------------
interface 'ControllableBuffer' (specialized 'KinectBuffer'):
--
internal:
--
	main_window			: 'Canvas2D';
	legend_window			: 'Canvas2D';
	video_recorder			: 'VideoRecorder';
	analyzer			: 'BehaviorAnalyzer';
	image				: 'BufferedImage';
	directory_name			: 'DirectoryName';
	stop_after_the_first_frame	: 'Switch';
	file_operation_error_handler	: 'FileOperationErrorHandler';
	file_operations			: 'File';
	text_operations			: 'Text';
	timer_operations		: 'Timer';
	con				: 'Console';
--
constant:
--
	ellipse_radius		: INTEGER;
--
	velocity_bound_1	: REAL;
	velocity_bound_2	: REAL;
	velocity_bound_3	: REAL;
	velocity_bound_4	: REAL;
	velocity_bound_5	: REAL;
	velocity_bound_6	: REAL;
	velocity_bound_7	: REAL;
	velocity_bound_8	: REAL;
--
	velocity_color_1	: Color;
	velocity_color_2	: Color;
	velocity_color_3	: Color;
	velocity_color_4	: Color;
	velocity_color_5	: Color;
	velocity_color_6	: Color;
	velocity_color_7	: Color;
	velocity_color_8	: Color;
	velocity_color_9	: Color;
--
[
PREDICATES:
--
imperative:
--
get_image_size_in_pixels(
	PointX,
	PointY,
	KinectFrameType)		- (o,o,i);
--
draw_tracks_or_skeletons(
	KinectSkeletonsMode,
	KinectFrameType,
	PointX,
	PointY)				- (i,i,i,i);
--
draw_skeletons(
	PointX,
	PointY,
	Skeletons,
	KinectFrameType)		- (i,i,i,i);
--
draw_tracks(
	PointX,
	PointY,
	TracksOfSkeletons,
	KinectFrameType)		- (i,i,i,i);
--
draw_recent_skeleton(
	PointX,
	PointY,
	Skeletons,
	Skeleton,
	KinectFrameType)		- (i,i,i,i,i);
draw_skeleton(
	PointX,
	PointY,
	Skeleton,
	KinectFrameType)		- (i,i,i,i);
--
draw_spine(
	PointX,
	PointY,
	SkeletonJoint,
	SkeletonSpine,
	KinectFrameType)		- (i,i,i,i,i);
draw_arm(
	PointX,
	PointY,
	SkeletonSpine,
	SkeletonArm,
	KinectFrameType)		- (i,i,i,i,i);
draw_hand(
	PointX,
	PointY,
	SkeletonJoint,
	SkeletonJoint,
	SkeletonArm,
	KinectFrameType)		- (i,i,i,i,i,i);
draw_leg(
	PointX,
	PointY,
	SkeletonSpine,
	SkeletonLeg,
	KinectFrameType)		- (i,i,i,i,i);
draw_link(
	PointX,
	PointY,
	SkeletonJoint,
	SkeletonJoint,
	KinectFrameType)		- (i,i,i,i,i);
--
select_line_width(
	SkeletonJointStatus,
	SkeletonJointStatus,
	INTEGER)			- (i,i,o);
select_line_width(
	SkeletonJointStatus,
	SkeletonJointStatus,
	SkeletonJointStatus,
	INTEGER)			- (i,i,i,o);
--
draw_joint(
	PointX,
	PointY,
	SkeletonJoint,
	KinectFrameType)		- (i,i,i,i);
--
draw_identifier(
	PointX,
	PointY,
	Skeleton,
	KinectFrameType)		- (i,i,i,i);
--
draw_hand_trajectories(
	PointX,
	PointY,
	Skeleton,
	Skeleton,
	KinectFrameType)		- (i,i,i,i,i);
draw_trajectory_segment(
	PointX,
	PointY,
	SkeletonJoint,
	SkeletonJoint,
	KinectFrameType)		- (i,i,i,i,i);
--
velocity(
	Numerical,
	Numerical,
	Numerical) = REAL		- (i,i,i);
--
select_trajectory_color(REAL,Color)	- (i,o);
--
draw_parallelepipeds(
	PointX,
	PointY,
	Skeleton,
	KinectFrameType)		- (i,i,i,i);
draw_parallelepiped(
	PointX,
	PointY,
	Parallelepiped,
	KinectFrameType,
	Color,
	Numerical)			- (i,i,i,i,i,i);
--
draw_rectangles(
	PointX,
	PointY,
	Skeleton,
	KinectFrameType)		- (i,i,i,i);
draw_rectangle(
	PointX,
	PointY,
	Rectangle,
	KinectFrameType,
	Color,
	Numerical)			- (i,i,i,i,i,i);
--
draw_line(
	PointX,
	PointY,
	VertexPosition2D,
	VertexPosition2D,
	KinectFrameType,
	Color,
	Numerical,
	PenAttributes)			- (i,i,i,i,i,i,i,i);
draw_line(
	PointX,
	PointY,
	VertexPosition3D,
	VertexPosition3D,
	KinectFrameType,
	Color,
	Numerical,
	PenAttributes)			- (i,i,i,i,i,i,i,i);
--
report_time(FrameNumber,INTEGER,REAL)	- (i,i,i);
--
draw_legend;
hide_legend;
--
determ:
--
check_file_name;
--
imperative:
--
set_output_directory(STRING)		- (i);
--
determ:
--
create_directory_if_necessary(STRING)	- (i);
--
imperative:
--
delete_files(S_List)			- (i);
--
read_all_frames;
read_only_the_first_frame;
--
save_frame_if_necessary(
	DataAcquisitionBufferOperatingMode,
	FrameNumber)			- (i,i);
--
determ:
--
rename_temporary_file(STRING)		- (i);
--
imperative:
--
continue_exporting_if_necessary;
--
list_directory(STRING) = S_List		- (i);
delete(FileName)			- (i);
delete(STRING)				- (i);
make_directory(FileName)		- (i);
make_directory(STRING)			- (i);
save(FileName,ImageEncodingAttributes)	- (i,i);
save(STRING,ImageEncodingAttributes)	- (i,i);
rename(FileName)			- (i);
rename(STRING)				- (i);
--
PREDICATES:
--
imperative:
--
'+'(PointX,PointX) = PointX		- (i,i);
'+'(PointY,PointY) = PointY		- (i,i);
'-'(PointX,PointX) = PointX		- (i,i);
'-'(PointY,PointY) = PointY		- (i,i);
'/'(PointX,PointX) = PointX		- (i,i);
'/'(PointY,PointY) = PointY		- (i,i);
'/'(PointX,PointY) = REAL		- (i,i);
--
power(PointX,INTEGER) = REAL		- (i,i);
power(PointY,INTEGER) = REAL		- (i,i);
power(PointX,INTEGER) = REAL		- (i,i);
]
-----------------------------------------------------------------------
interface 'BehaviorAnalyzer' (specialized 'Alpha'):
--
internal:
--
	graphics_window		: 'Canvas2D';
	buffer			: 'KinectBuffer';
	con			: 'Console';
--
[
PREDICATES:
--
imperative:
--
analyse_chronicle(SkeletonChronicle)		- (i);
--
determ:
--
analyse_skeletons
	(Skeletons,SkeletonChronicle)		- (i,i);
--
analyse_moving_arm(
	Skeletons,
	SkeletonChronicle,
	INTEGER,
	Side,
	Point3D,
	REAL,
	INTEGER)				- (i,i,i,i,i,i,i);
--
nondeterm:
--
a_moving_arm_of_a_person(
	Skeletons,
	INTEGER,
	Side,
	Point3D,
	REAL,
	INTEGER)				- (i,o,o,o,o,o);
a_moving_hand_of_a_person(
	Skeleton,
	INTEGER,
	Side,
	Point3D,
	REAL,
	INTEGER)				- (i,o,o,o,o,o);
a_moving_joint(
	SkeletonJoint,
	Point3D,
	REAL)					- (i,o,o);

--
determ:
--
is_near_a_head_of_a_person(
	Skeletons,
	SkeletonChronicle,
	INTEGER,
	Side,
	Point3D,
	REAL,
	INTEGER)				- (i,i,i,i,i,i,i);
--
nondeterm:
--
select_the_head_of_a_person(
	Skeletons,
	INTEGER,
	Point3D,
	REAL,
	INTEGER)				- (i,i,i,i,o);
--
determ:
--
check_the_head_of_the_person(
	SkeletonChronicle,
	INTEGER,
	Side,
	INTEGER,
	INTEGER,
	INTEGER)				- (i,i,i,i,i,o);
--
is_fast_and_near(Point3D,REAL,Point3D)		- (i,i,i);
--
determ:
--
is_near_a_hand_of_a_person(
	Skeletons,
	SkeletonChronicle,
	INTEGER,
	Side,
	Point3D,
	INTEGER)				- (i,i,i,i,i,i);
--
nondeterm:
--
select_a_hand_of_a_person(
	Skeletons,
	INTEGER,
	Point3D,
	INTEGER,
	Side)					- (i,i,i,o,o);
--
determ:
--
check_the_hand_of_the_person(
	SkeletonChronicle,
	INTEGER,
	Side,
	INTEGER,
	Side,
	INTEGER,
	INTEGER)				- (i,i,i,i,i,i,o);
--
is_near(Point3D,Point3D)			- (i,i);
--
get_hand(
	INTEGER,
	Side,
	Skeletons,
	Point3D,
	REAL)					- (i,i,i,o,o);
get_hand(
	Skeleton,
	Side,
	Point3D,
	REAL)					- (i,i,o,o);
--
get_head(
	INTEGER,
	Skeletons,
	Point3D)				- (i,i,o);
--
imperative:
--
distance(Numerical,Numerical,Numerical) = REAL	- (i,i,i);
--
velocity(Numerical,Numerical,Numerical) = REAL	- (i,i,i);
--
duration(INTEGER,INTEGER) = REAL		- (i,i);
--
fuzzy_metrics(REAL,REAL,REAL) = REAL		- (i,i,i);
fuzzy_metrics(INTEGER,INTEGER,INTEGER) = REAL	- (i,i,i);
--
imperative:
--
'-'(Numerical,Numerical) = Numerical		- (i,i);
--
power(Numerical,INTEGER) = REAL			- (i,i);
]
-----------------------------------------------------------------------
interface 'DataRecorder' (specialized 'KinectBuffer'):
--
internal:
--
	con	: 'Console';
--
[
]
-----------------------------------------------------------------------
interface 'DirectoryName' (specialized 'Database'):
[
DOMAINS:
Target	= STRING.
]
-----------------------------------------------------------------------
interface 'Switch' (specialized 'Database'):
[
DOMAINS:
Target	= YesNo.
PREDICATES:
imperative:
assign(YesNo)			- (i);
determ:
is_true;
]
-----------------------------------------------------------------------
interface 'FrameSizeRatio' (specialized 'Database'):
[
DOMAINS:
Target	= REAL.
PREDICATES:
imperative:
assign(REAL)						- (i);
determ:
is_current_ratio(REAL)					- (i);
]
-----------------------------------------------------------------------
interface 'KinectErrorHandler' (specialized 'Trap'):
--
internal:
--
	world;
	handler;
	con		: 'Console';
--
[
PREDICATES:
determ:
start;
stop;
imperative:
alarm(ExceptionName,SYMBOL,_*)				- (i,i,i);
]
-----------------------------------------------------------------------
interface 'FileOperationErrorHandler' (specialized 'Trap'):
--
internal:
--
	world;
	handler;
	con		: 'Console';
--
[
PREDICATES:
determ:
does_exist(FileName)					- (i);
does_exist(STRING)					- (i);
list_directory(STRING) = S_List				- (i);
delete(FileName)					- (i);
delete(STRING)						- (i);
make_directory(FileName)				- (i);
make_directory(STRING)					- (i);
save(FileName,ImageEncodingAttributes)			- (i,i);
save(STRING,ImageEncodingAttributes)			- (i,i);
rename(FileName)					- (i);
rename(STRING)						- (i);
imperative:
alarm(ExceptionName,SYMBOL,_*)				- (i,i,i);
]
-----------------------------------------------------------------------
