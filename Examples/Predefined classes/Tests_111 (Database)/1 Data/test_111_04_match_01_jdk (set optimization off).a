-----------------------------------------------------------------------
-- An example of Actor Prolog program.                               --
-- (c) 2011 IRE RAS Alexei A. Morozov                                --
-----------------------------------------------------------------------
--
DOMAINS:
--
-- reference:
ground:
--
MyData		= {x:R_INTEGER,y:R_INTEGER,z:R_INTEGER}.
R_INTEGER	= INTEGER.
--
PREDICATES:
--
imperative:
--
test1;
test2;
test3;
test4;
test5;
--
-----------------------------------------------------------------------
class 'MyDatabase' (specialized 'Database'):
[
DOMAINS:
-- reference:
ground:
Target	= MyData.
]
-----------------------------------------------------------------------
class 'Main' (specialized 'Console'):
--
internal:
--
store	= ('MyDatabase');
--
[
goal:-!,
	test1,
	test2,
	test3,
	test4,
	test5.
--
test1:-
	writeln("Test 1: append(i)"),
	writeln("\tI will store data items."),
	store ? append({x:10,y:20}),
	store ? append({x:30,y:50,z:5}),
	store ? append({x:100,y:21}),
	store ? append({y:23,x:25,z:7}),
	store ? append({x:30,y:25}),
	writeln("\tDone.").
--
test2:-
	writeln("Test 2: find(o)"),
	writeln("\tI will retrieve data items:"),
	store ? find(Item),
	writeln("\t",Item),
	fail.
test2:-
	writeln("\tDone.").
--
test3:-
	writeln("Test 3: match(o) without output"),
	writeln("\tI will retrieve data items:"),
	write("\t"),
	store ? match(_),
	write("."),
	fail.
test3:-
	writeln("\n\tDone.").
--
test4:-
	writeln("Test 4: match(o)"),
	writeln("\tI will retrieve data items:"),
	Item== store ? match(Output),
	writeln("\t","Item: ",Item," Pattern: ",Output),
	fail.
test4:-
	writeln("\tDone.").
--
test5:-
	writeln("Test 5: match(i)"),
	writeln("\tI will retrieve data items:"),
	Item== store ? match({z:Key|Rest}),
	writeln("\tItem:",Item," z:",Key," Rest: ",Rest),
	fail.
test5:-
	writeln("\tDone.").
]
-----------------------------------------------------------------------
