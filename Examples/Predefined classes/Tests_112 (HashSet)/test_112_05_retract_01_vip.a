-----------------------------------------------------------------------
-- An example of Actor Prolog program.                               --
-- (c) 2011 IRE RAS Alexei A. Morozov                                --
-----------------------------------------------------------------------
--
DOMAINS:
--
reference:
--
MyData		= {x:R_INTEGER,y:R_INTEGER,z:R_INTEGER}.
R_INTEGER	= INTEGER.
--
PREDICATES:
--
imperative:
--
test1;
test2;
test3;
test4;
test5;
test6;
--
-----------------------------------------------------------------------
class 'MyHashSet' (specialized 'HashSet'):
[
DOMAINS:
--
reference:
--
Target	= MyData.
]
-----------------------------------------------------------------------
class 'Main' (specialized 'Console'):
--
internal:
--
store	= ('MyHashSet');
--
[
goal:-!,
	test1,
	test2,
	test3,
	test4,
	test2,
	test5,
	test2,
	test1,
	test2,
	test6,
	test2.
--
test1:-
	writeln("Test 1: append(i)"),
	writeln("\tI will store data items."),
	store ? append({x:110,y:210}),
	store ? append({x:120,y:220}),
	store ? append({y:30,x:25,z:7}),
	store ? append({x:130,y:230}),
	store ? append({y:30,x:25,z:7}),
	store ? append({x:25,z:7,y:30}),
	writeln("\tDone.").
--
test2:-
	writeln("Test 2: find(o)"),
	writeln("\tI will retrieve data items:"),
	store ? find(Item),
	writeln("\t",Item),
	fail.
test2:-
	writeln("\tDone.").
--
test3:-
	writeln("Test 3: retract(o)"),
	writeln("\tI will delete one data item:"),
	store ? retract(Item),!,
	writeln("\tDone: ",Item).
test3:-
	writeln("\tFailure.").
--
test4:-
	writeln("Test 4: retract(i)"),
	writeln("\tI will delete one data item:"),
	store ? retract({z:Z|Rest}),!,
	writeln("\tDone: z=",Z," Rest=",Rest).
test4:-
	writeln("\tFailure.").
--
test5:-
	writeln("Test 5: append(i)"),
	writeln("\tI will store one data item."),
	store ? append({z:7,x:25,y:30}),
	writeln("\tDone.").
--
test6:-
	writeln("Test 6: retract(o)"),
	writeln("\tI will delete all data items:"),
	store ? retract(Item),
		writeln("\t",Item),
		fail.
test6:-
	writeln("\tDone.").
]
-----------------------------------------------------------------------
