-----------------------------------------------------------------------
-- An example of Actor Prolog program.                               --
-- (c) 2011 IRE RAS Alexei A. Morozov                                --
-----------------------------------------------------------------------
--
PREDICATES:
--
imperative:
--
test1;
test2;
test3;
test4;
test5;
--
-----------------------------------------------------------------------
class 'MyHashMap' (specialized 'HashMap'):
[
DOMAINS:
--
TargetKey	= N.
TargetValue	= f(R,S,T).
N		= INTEGER.
R		= REAL.
S		= SYMBOL.
T		= STRING.
]
-----------------------------------------------------------------------
class 'Main' (specialized 'Console'):
--
internal:
--
store	= ('MyHashMap');
--
[
goal:-!,
	test1,
	test2,
	test3,
	test4,
	test5.
--
test1:-
	writeln("I will store data items."),
	store ? put(1000,f(3.14,'symbol1',"Text1")),
	store ? put(1000,f(7.00,'symbol1',"Text1")),
	store ? put(1000,f(3.14,'symbol1',"Text1")),
	store ? put(3000,f(3.14,'symbol1',"Text1")),
	store ? put(1000,f(3.14,'symbol2',"Text1")),
	store ? put(1000,f(3.14,'symbol1',"Text2")),
	store ? put(5000,f(9.00,'symbol1',"Text3")),
	writeln("Done.").
--
test2:-
	writeln("I will retrieve data items:"),
	store ? find(Item),
	writeln("\t",Item),
	fail.
test2:-
	writeln("Done.").
--
test3:-
	writeln("I will retrieve data items:"),
	Key1== 1000,
	Value1== store?get(Key1),
	writeln("\t",Key1," -> ",Value1),
	Key2== 3000,
	Value2== store?get(Key2),
	writeln("\t",Key2," -> ",Value2),
	Key3== 5000,
	Value3== store?get(Key3),!,
	writeln("\t",Key3," -> ",Value3),
	writeln("Done.").
test3:-
	writeln("Failure!").
--
test4:-
	writeln("I will check hash map:"),
	Key1== 1000,
	store ? contains_key(Key1),
	writeln("\tThe ",Key1," key does exist."),
	Key2== 3000,
	store ? contains_key(Key2),
	writeln("\tThe ",Key2," key does exist."),
	Key3== 5000,
	store ? contains_key(Key3),
	writeln("\tThe ",Key3," key does exist."),!,
	writeln("Done.").
test4:-
	writeln("Failure!").
--
test5:-
	writeln("I will try to retrieve non-existent data item:"),
	Key1== -10000,
	writeln("\tKey: ",Key1),
	store ? contains_key(Key1),!,
	writeln("\tThe ",Key1," key does exist.").
test5:-
	writeln("\tThis key does not exist in the map.").
]
-----------------------------------------------------------------------
