-----------------------------------------------------------------------
--                                                                   --
--                     Решение задачи про графы.                     --
--              Программа написана на Акторном Прологе.              --
--                (c) 2011 МГППУ, Алексей А. Морозов.                --
--                                                                   --
-- Определения: граф - это множество дуг (рёбер) представленных      --
-- упорядоченными парами <Xi,Xj> вершин; путь - это                  --
-- последовательность X1,X2,...,Xn, в которой либо <Xi,Xi+1>, либо   --
-- <Xi+1,Xi> - дуга; ациклический путь - это путь, в котором все     --
-- вершины различны; цикл - путь X1,X2,...,Xn,X1, где X2,...,Xn      --
-- - ациклический путь.                                              --
-- Задача: Дан непустой граф G. Написать программу, определяющую,    --
-- содержит ли граф G хотя бы три цикла, не имеющие общих вершин.    --
--                                                                   --
-----------------------------------------------------------------------

DOMAINS:

Граф		= Дуга*.
Дуга		= д(Вершина,Вершина).
Вершина		= INTEGER.

НомераДуг	= НомерДуги*.
НомерДуги	= INTEGER.

СписокЦиклов	= НомераВершин*.
НомераВершин	= Вершина*.

-----------------------------------------------------------------------

PREDICATES:

imperative:

проверка_графа(Граф)				- (i);

nondeterm:

есть_циклы_без_общих_вершин(
	СписокЦиклов,
	СписокЦиклов,
	INTEGER,
	INTEGER)	- (i,i,i,i);

determ:

не_имеет_общих_вершин(
	НомераВершин,
	СписокЦиклов)	- (i,i);
не_пересекаются(
	НомераВершин,
	НомераВершин)	- (i,i);

imperative:

найти_все_циклы(
	Граф,
	СписокЦиклов,
	СписокЦиклов)	- (i,i,o);

nondeterm:

ищем_цикл(Граф,Граф,НомераВершин)		- (i,i,o);

строим_путь(
	Вершина,
	Граф,
	НомераДуг,
	Вершина,
	НомераВершин,
	НомераВершин)	- (i,i,i,i,i,o);
выбрать_дугу(
	Граф,
	Вершина,
	Вершина,
	НомерДуги,
	НомерДуги)	- (i,i,o,i,o);

determ:

не_принадлежит(НомерДуги,НомераДуг)		- (i,i);
не_принадлежит(НомераВершин,СписокЦиклов)	- (i,i);
не_принадлежит(Вершина,НомераВершин)		- (i,i);

nondeterm:

дуга(Вершина,Вершина)				- (o,o);

-----------------------------------------------------------------------
