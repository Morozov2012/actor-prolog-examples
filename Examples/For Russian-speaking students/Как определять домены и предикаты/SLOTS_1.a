
DOMAINS:

reference:

N		= [0..127].
R_Integer	= INTEGER.

mixed:

D1		= t(D2,D3,D4,'Test').

reference:

D2	= {}.
D3	= {x:N,y:N}; {z:N,k:D4}; ('Test'); D3 *.
D4	= D3*.

R_Real	= REAL.
W	= ('Test'); 'dummy'; W*.

interface 'MyConsole':
[
writeln(_*);
]

interface 'Test':
--
a	: N;
b	: REAL;
c	: SYMBOL;
d	: STRING;
e	: N;
--
variable:
--
f	: D1;
g	: D2;
h	: D3;
i	: D4;
--
variable:
--
v11	: D3;
v12	: D3;
v2	: W;
--
constant:
--
w1	: W;
w2	: W;
--
con	: 'Console';
--
[
f3(R_Integer,R_Integer,R_Integer) = W;
f1(R_Integer,R_Integer,R_Integer) = D3;
f2(R_Integer,R_Real) = D3;
]

class 'Test':
--
-- Проверяются следующие правила описания
-- слотов класса.
--
-- Все слоты класса должны быть определены
-- в интерфейсе этого класса.
--
constant:
--
a	= 8#150#;
b	= 300.0;
c	= 'symbol';
d	= "Text";
e	= 32;
--
variable:
--
f	= t(_,{},[{z:100|_},_|L],self);
g	= {};
h	= {x:10|R};
--
variable:
--
i	= [A,_,R|L];
--
-- Определение.
-- Целевыми доменами резидента называются: домен
-- целевого параметра резидента, а также все домены,
-- входящие на каком-либо уровне вложенности в состав
-- аргументов альтернатив этого домена.
--
-- Определение.
-- Целевыми классами резидента называются классы,
-- являющиеся альтернативами его целевых доменов.
--
-- Домены слотов, в качестве начальных значений
-- которых заданы резиденты, должны отвечать
-- условиям (A) или (B), рассмотренным ниже.
--
-- Вариант (A):
-- 1) Целевой параметр резидента задан
--    с помощью слота, объявленного "constant",
--    или конструктора.
-- 2) Домен целевого параметра является
--    ground или mixed, и его единственной
--    альтернативой является (целевой) класс.
-- 3) В целевом классе резидента должны
--    быть определены методы (функции),
--    соответствующие функции резидента, с
--    соответствующим количеством аргументов
--    подходящих доменов, с соответствующим
--    доменом возвращаемого значения и образцом
--    вызова, аргументы которого равны "i"
--    или "_".
-- 4) Домен слота должен иметь альтернативу #
--    и альтернативу "список доменов значений,
--    возвращаемых функцией резидента".
-- Вариант (B):
-- 1) Домен слота должен быть равен домену
--    целевого параметра резидента.
-- 2) Множество целевых классов резидента должно
--    быть не пустым.
-- 3) Во всех целевых классах резидента должны
--    быть определены методы (функции),
--    соответствующие функции резидента, с
--    соответствующим количеством аргументов
--    подходящих доменов, с соответствующим
--    доменом возвращаемого значения и образцом
--    вызова, аргументы которого равны "i"
--    или "_".
-- 4) Кажый целевой домен, альтернативой которого
--    является класс, должен также иметь
--    альтернативу # и альтернативу
--    "список доменов значений, возвращаемых
--    функцией резидента".
--
variable:
--
v11	= A ?? f1(1,2,3);
v12	= A ?? f2(1,_);
v2	= w2 ?? f3(1,2,3);
--
constant:
--
w1	= 'dummy';
w2	= 'dummy';
--
-- Определение.
-- Домен переменной в составе инициализаторов
-- слотов класса называется статически
-- определённым, если эта переменная входит
-- в состав некоторого инициализатора, отличного
-- от функции конструктора резидента.
--
-- Домены всех переменных, используемых в
-- качестве целевых параметров резидентов,
-- должны быть статически определёнными.
--
con	= ('Console');
--
[
goal:-
	con ? writeln("Hello world!").
--
f1(_,_,_)= {x:1,y:3}.
f2(_,_)= {x:1,z:5,k:[{x:9,y:12}]}.
f3(_,_,_)= 'dummy'.
--
alarm(_).
]

project: (('Test'))
