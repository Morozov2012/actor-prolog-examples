--------------------------------------------------------------------
-- Predefined Classes of Actor Prolog                             --
-- (c) 2016 IRE RAS Alexei A. Morozov                             --
--------------------------------------------------------------------

package "Morozov/Kinect":

import 'DataAcquisitionBuffer' from "Morozov/VideoBuffer";

--------------------------------------------------------------------
-- The 'Kinect' class is specialized class 'DataAbstraction'.     --
--------------------------------------------------------------------

class 'Kinect' (specialized 'DataAbstraction'):
--
skeleton_release_time		= 3;
--
horizontal_correction		= 'default';
vertical_correction		= 'default';
--
[
SOURCE:
	"morozov.built_in.Kinect";

CLAUSES:

activate:
	[external "activate"].
stop:
	[external "stop"].
--
set_skeleton_release_time(Frames):
	[external "setSkeletonReleaseTime"].
get_skeleton_release_time() = Frames:
	[external "getSkeletonReleaseTime"].
--
set_horizontal_correction(PixelNumber):
	[external "setHorizontalCorrection"].
get_horizontal_correction() = PixelNumber:
	[external "getHorizontalCorrection"].
--
set_vertical_correction(PixelNumber):
	[external "setVerticalCorrection"].
get_vertical_correction() = PixelNumber:
	[external "getVerticalCorrection"].
--
set_correction(HorizontalCorrection,VerticalCorrection):
	[external "setCorrection"].
get_correction(HorizontalCorrection,VerticalCorrection):
	[external "getCorrection"].
--
get_correction_in_pixels(HorizontalCorrection,VerticalCorrection):
	[external "getCorrectionInPixels"].
]

--------------------------------------------------------------------
-- The 'KinectBuffer' class is specialized                        --
-- class 'DataAcquisitionBuffer'.                                 --
--------------------------------------------------------------------

class 'KinectBuffer' (specialized 'DataAcquisitionBuffer'):
--
constant:
--
displaying_mode			= 'default';
input_device			= 'none';
data_acquisition_optimization	= 'default';
--
color_map			= [];
people_colors			= [];
--
maximal_chronicle_length	= -1;
--
scene_depth_threshold		= 0.05;
scene_surface_type		= 'default';
--
-- The implementation of the 'ReadWriteBuffer' interface:
--
write_buffer_size		= 50;
read_buffer_size		= 0;
--
-- The implementation of the 'OperatingSystemResource' interface:
--
name				= "a-prolog.k2j";
extension			= ".k2j";
--
[
SOURCE:
	"morozov.built_in.KinectBuffer";

CLAUSES:
--
start(RequireExclusiveAccess):
	[external "start"].
--
connect:
	[external "connect"].
connect(RequireExclusiveAccess):
	[external "connect"].
--
disconnect:
	[external "disconnect"].
--
is_connected:
	[external "isConnected"].
has_exclusive_access:
	[external "hasExclusiveAccess"].
--
get_recent_frame_number(Number):
	[external "getRecentFrameNumber"].
get_recent_frame_time(Milliseconds):
	[external "getRecentFrameTime"].
get_recent_frame_relative_time(Milliseconds):
	[external "getRecentFrameRelativeTime"].
get_recent_frame_rate(FrameRate):
	[external "getRecentFrameRate"].
--
get_recent_image(BufferedImage):
	[external "getRecentImage"].
--
get_recent_scene(BufferedScene):
	[external "getRecentScene"].
get_recent_scene(BufferedScene,TextureImage):
	[external "getRecentScene"].
--
get_recent_mapping(MappedImage):
	[external "getRecentMapping"].
get_recent_mapping(MappedImage,TextureImage):
	[external "getRecentMapping"].
--
set_lookup_table(FileName):
	[external "setLookupTable"].
set_lookup_table(FileName,CorrectionX,CorrectionY):
	[external "setLookupTable"].
--
reset_lookup_table:
	[external "resetLookupTable"].
--
set_scene_appearance(Appearance):
	[external "setSceneAppearance"].
--
reset_scene_appearance:
	[external "resetSceneAppearance"].
--
get_skeletons(Skeletons):
	[external "getSkeletons"].
get_chronicle(SkeletonChronicle):
	[external "getChronicle"].
get_tracks(TracksOfSkeletons):
	[external "getTracks"].
--
get_depth_image_size_in_pixels(Width,Height):
	[external "getDepthImageSizeInPixels"].
get_color_image_size_in_pixels(Width,Height):
	[external "getColorImageSizeInPixels"].
--
get_computed_correction(Horizontal,Vertical):
	[external "getComputedCorrection"].
--
get_delivered_frame_type(KinectFrameType):
	[external "getDeliveredFrameType"].
get_delivered_data_acquisition_mode(DataAcquisitionMode):
	[external "getDeliveredDataAcquisitionMode"].
get_delivered_people_index_mode(KinectPeopleIndexMode):
	[external "getDeliveredPeopleIndexMode"].
get_delivered_circumscription_modes(KinectCircumscriptionModes):
	[external "getDeliveredCircumscriptionModes"].
get_delivered_skeletons_mode(KinectSkeletonsMode):
	[external "getDeliveredSkeletonsMode"].
get_delivered_correction(Horizontal,Vertical):
	[external "getDeliveredCorrection"].
--
set_displaying_mode(KinectDisplayingMode):
	[external "setDisplayingMode"].
get_displaying_mode() = KinectDisplayingMode:
	[external "getDisplayingMode"].
--
set_input_device(KinectDevice):
	[external "setInputDevice"].
get_input_device() = KinectDevice:
	[external "getInputDevice"].
--
set_data_acquisition_optimization(KinectPerformanceOptimization):
	[external "setDataAcquisitionOptimization"].
get_data_acquisition_optimization() = KinectPerformanceOptimization:
	[external "getDataAcquisitionOptimization"].
--
set_color_map(ColorMap):
	[external "setColorMap"].
get_color_map() = ColorMap:
	[external "getColorMap"].
--
set_people_colors(ColorMap):
	[external "setPeopleColors"].
get_people_colors() = ColorMap:
	[external "getPeopleColors"].
--
set_maximal_chronicle_length(Seconds):
	[external "setMaximalChronicleLength"].
get_maximal_chronicle_length() = Seconds:
	[external "getMaximalChronicleLength"].
--
set_scene_depth_threshold(MaximalDepthDifference):
	[external "setSceneDepthThreshold"].
get_scene_depth_threshold() = MaximalDepthDifference:
	[external "getSceneDepthThreshold"].
--
set_scene_surface_type(KinectSurfaceType):
	[external "setSceneSurfaceType"].
get_scene_surface_type() = KinectSurfaceType:
	[external "getSceneSurfaceType"].
]
